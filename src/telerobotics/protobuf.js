/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.CatheterCoordinates', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.CatheterData', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.Coordinates', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.DataType', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.Device', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.DeviceInfo', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.DeviceType', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.ElectricalSignalData', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.Frame', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.NullableRobotControllerData', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.Quaternion', null, global);
goog.exportSymbol('proto.github.com.pyrus.platform.protos.RobotControllerData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.Device.displayName = 'proto.github.com.pyrus.platform.protos.Device';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.DeviceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.pyrus.platform.protos.DeviceInfo.repeatedFields_, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.DeviceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.DeviceInfo.displayName = 'proto.github.com.pyrus.platform.protos.DeviceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.Coordinates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.Coordinates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.Coordinates.displayName = 'proto.github.com.pyrus.platform.protos.Coordinates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.Quaternion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.Quaternion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.Quaternion.displayName = 'proto.github.com.pyrus.platform.protos.Quaternion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.CatheterCoordinates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.CatheterCoordinates.displayName = 'proto.github.com.pyrus.platform.protos.CatheterCoordinates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.CatheterData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.CatheterData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.CatheterData.displayName = 'proto.github.com.pyrus.platform.protos.CatheterData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.RobotControllerData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.RobotControllerData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.RobotControllerData.displayName = 'proto.github.com.pyrus.platform.protos.RobotControllerData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.github.com.pyrus.platform.protos.NullableRobotControllerData.oneofGroups_);
};
goog.inherits(proto.github.com.pyrus.platform.protos.NullableRobotControllerData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.NullableRobotControllerData.displayName = 'proto.github.com.pyrus.platform.protos.NullableRobotControllerData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.ElectricalSignalData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.ElectricalSignalData.displayName = 'proto.github.com.pyrus.platform.protos.ElectricalSignalData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.pyrus.platform.protos.Frame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.pyrus.platform.protos.Frame.repeatedFields_, null);
};
goog.inherits(proto.github.com.pyrus.platform.protos.Frame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.pyrus.platform.protos.Frame.displayName = 'proto.github.com.pyrus.platform.protos.Frame';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.Device.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.Device} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Device.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    info: (f = msg.getInfo()) && proto.github.com.pyrus.platform.protos.DeviceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.Device}
 */
proto.github.com.pyrus.platform.protos.Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.Device;
  return proto.github.com.pyrus.platform.protos.Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.Device}
 */
proto.github.com.pyrus.platform.protos.Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.github.com.pyrus.platform.protos.DeviceInfo;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.DeviceInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.Device} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.pyrus.platform.protos.DeviceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Device.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Device.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional DeviceInfo info = 2;
 * @return {?proto.github.com.pyrus.platform.protos.DeviceInfo}
 */
proto.github.com.pyrus.platform.protos.Device.prototype.getInfo = function() {
  return /** @type{?proto.github.com.pyrus.platform.protos.DeviceInfo} */ (
    jspb.Message.getWrapperField(this, proto.github.com.pyrus.platform.protos.DeviceInfo, 2));
};


/** @param {?proto.github.com.pyrus.platform.protos.DeviceInfo|undefined} value */
proto.github.com.pyrus.platform.protos.Device.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.Device.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.Device.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.DeviceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.DeviceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.toObject = function(includeInstance, msg) {
  var obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ip: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0),
    producesList: jspb.Message.getRepeatedField(msg, 5),
    consumesList: jspb.Message.getRepeatedField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.DeviceInfo}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.DeviceInfo;
  return proto.github.com.pyrus.platform.protos.DeviceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.DeviceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.DeviceInfo}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.github.com.pyrus.platform.protos.DeviceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.github.com.pyrus.platform.protos.DataType>} */ (reader.readPackedEnum());
      msg.setProducesList(value);
      break;
    case 6:
      var value = /** @type {!Array<!proto.github.com.pyrus.platform.protos.DataType>} */ (reader.readPackedEnum());
      msg.setConsumesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.DeviceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.DeviceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getProducesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getConsumesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DeviceType type = 2;
 * @return {!proto.github.com.pyrus.platform.protos.DeviceType}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.getType = function() {
  return /** @type {!proto.github.com.pyrus.platform.protos.DeviceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.github.com.pyrus.platform.protos.DeviceType} value */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string ip = 3;
 * @return {string}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 port = 4;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated DataType produces = 5;
 * @return {!Array<!proto.github.com.pyrus.platform.protos.DataType>}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.getProducesList = function() {
  return /** @type {!Array<!proto.github.com.pyrus.platform.protos.DataType>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<!proto.github.com.pyrus.platform.protos.DataType>} value */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.setProducesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.github.com.pyrus.platform.protos.DataType} value
 * @param {number=} opt_index
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.addProduces = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.clearProducesList = function() {
  this.setProducesList([]);
};


/**
 * repeated DataType consumes = 6;
 * @return {!Array<!proto.github.com.pyrus.platform.protos.DataType>}
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.getConsumesList = function() {
  return /** @type {!Array<!proto.github.com.pyrus.platform.protos.DataType>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<!proto.github.com.pyrus.platform.protos.DataType>} value */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.setConsumesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.github.com.pyrus.platform.protos.DataType} value
 * @param {number=} opt_index
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.addConsumes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.github.com.pyrus.platform.protos.DeviceInfo.prototype.clearConsumesList = function() {
  this.setConsumesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.Coordinates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.Coordinates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Coordinates.toObject = function(includeInstance, msg) {
  var obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    z: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.Coordinates}
 */
proto.github.com.pyrus.platform.protos.Coordinates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.Coordinates;
  return proto.github.com.pyrus.platform.protos.Coordinates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.Coordinates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.Coordinates}
 */
proto.github.com.pyrus.platform.protos.Coordinates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.Coordinates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.Coordinates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Coordinates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Coordinates.prototype.setZ = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.Quaternion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.Quaternion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Quaternion.toObject = function(includeInstance, msg) {
  var obj = {
    w: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    x: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    z: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.Quaternion}
 */
proto.github.com.pyrus.platform.protos.Quaternion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.Quaternion;
  return proto.github.com.pyrus.platform.protos.Quaternion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.Quaternion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.Quaternion}
 */
proto.github.com.pyrus.platform.protos.Quaternion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setW(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.Quaternion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.Quaternion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Quaternion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getW();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional float w = 1;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.getW = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.setW = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float x = 2;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float y = 3;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float z = 4;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.Quaternion.prototype.setZ = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.CatheterCoordinates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.CatheterCoordinates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.toObject = function(includeInstance, msg) {
  var obj = {
    position: (f = msg.getPosition()) && proto.github.com.pyrus.platform.protos.Coordinates.toObject(includeInstance, f),
    rotation: (f = msg.getRotation()) && proto.github.com.pyrus.platform.protos.Quaternion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.CatheterCoordinates}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.CatheterCoordinates;
  return proto.github.com.pyrus.platform.protos.CatheterCoordinates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.CatheterCoordinates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.CatheterCoordinates}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.github.com.pyrus.platform.protos.Coordinates;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.Coordinates.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new proto.github.com.pyrus.platform.protos.Quaternion;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.Quaternion.deserializeBinaryFromReader);
      msg.setRotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.CatheterCoordinates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.CatheterCoordinates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.github.com.pyrus.platform.protos.Coordinates.serializeBinaryToWriter
    );
  }
  f = message.getRotation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.pyrus.platform.protos.Quaternion.serializeBinaryToWriter
    );
  }
};


/**
 * optional Coordinates position = 1;
 * @return {?proto.github.com.pyrus.platform.protos.Coordinates}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.getPosition = function() {
  return /** @type{?proto.github.com.pyrus.platform.protos.Coordinates} */ (
    jspb.Message.getWrapperField(this, proto.github.com.pyrus.platform.protos.Coordinates, 1));
};


/** @param {?proto.github.com.pyrus.platform.protos.Coordinates|undefined} value */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.setPosition = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.clearPosition = function() {
  this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Quaternion rotation = 2;
 * @return {?proto.github.com.pyrus.platform.protos.Quaternion}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.getRotation = function() {
  return /** @type{?proto.github.com.pyrus.platform.protos.Quaternion} */ (
    jspb.Message.getWrapperField(this, proto.github.com.pyrus.platform.protos.Quaternion, 2));
};


/** @param {?proto.github.com.pyrus.platform.protos.Quaternion|undefined} value */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.setRotation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.clearRotation = function() {
  this.setRotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.CatheterCoordinates.prototype.hasRotation = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.CatheterData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.CatheterData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.CatheterData.toObject = function(includeInstance, msg) {
  var obj = {
    sensorid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    coordinates: (f = msg.getCoordinates()) && proto.github.com.pyrus.platform.protos.CatheterCoordinates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.CatheterData}
 */
proto.github.com.pyrus.platform.protos.CatheterData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.CatheterData;
  return proto.github.com.pyrus.platform.protos.CatheterData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.CatheterData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.CatheterData}
 */
proto.github.com.pyrus.platform.protos.CatheterData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSensorid(value);
      break;
    case 2:
      var value = new proto.github.com.pyrus.platform.protos.CatheterCoordinates;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.CatheterCoordinates.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.CatheterData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.CatheterData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.CatheterData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.pyrus.platform.protos.CatheterCoordinates.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 sensorId = 1;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.getSensorid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.setSensorid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CatheterCoordinates coordinates = 2;
 * @return {?proto.github.com.pyrus.platform.protos.CatheterCoordinates}
 */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.getCoordinates = function() {
  return /** @type{?proto.github.com.pyrus.platform.protos.CatheterCoordinates} */ (
    jspb.Message.getWrapperField(this, proto.github.com.pyrus.platform.protos.CatheterCoordinates, 2));
};


/** @param {?proto.github.com.pyrus.platform.protos.CatheterCoordinates|undefined} value */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.setCoordinates = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.CatheterData.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.RobotControllerData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.RobotControllerData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.toObject = function(includeInstance, msg) {
  var obj = {
    movementvelocity: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    rotationvelocity: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    deflectionvelocity: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.RobotControllerData}
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.RobotControllerData;
  return proto.github.com.pyrus.platform.protos.RobotControllerData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.RobotControllerData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.RobotControllerData}
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMovementvelocity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRotationvelocity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDeflectionvelocity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.RobotControllerData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.RobotControllerData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovementvelocity();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getRotationvelocity();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getDeflectionvelocity();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float movementVelocity = 1;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.getMovementvelocity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.setMovementvelocity = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float rotationVelocity = 2;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.getRotationvelocity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.setRotationvelocity = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float deflectionVelocity = 3;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.getDeflectionvelocity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.RobotControllerData.prototype.setDeflectionvelocity = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.KindCase = {
  KIND_NOT_SET: 0,
  NULL: 1,
  DATA: 2
};

/**
 * @return {proto.github.com.pyrus.platform.protos.NullableRobotControllerData.KindCase}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.getKindCase = function() {
  return /** @type {proto.github.com.pyrus.platform.protos.NullableRobotControllerData.KindCase} */(jspb.Message.computeOneofCase(this, proto.github.com.pyrus.platform.protos.NullableRobotControllerData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.NullableRobotControllerData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.NullableRobotControllerData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.toObject = function(includeInstance, msg) {
  var obj = {
    pb_null: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: (f = msg.getData()) && proto.github.com.pyrus.platform.protos.RobotControllerData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.NullableRobotControllerData}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.NullableRobotControllerData;
  return proto.github.com.pyrus.platform.protos.NullableRobotControllerData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.NullableRobotControllerData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.NullableRobotControllerData}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.protobuf.NullValue} */ (reader.readEnum());
      msg.setNull(value);
      break;
    case 2:
      var value = new proto.github.com.pyrus.platform.protos.RobotControllerData;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.RobotControllerData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.NullableRobotControllerData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.NullableRobotControllerData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.google.protobuf.NullValue} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.pyrus.platform.protos.RobotControllerData.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.NullValue null = 1;
 * @return {!proto.google.protobuf.NullValue}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.getNull = function() {
  return /** @type {!proto.google.protobuf.NullValue} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.protobuf.NullValue} value */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.setNull = function(value) {
  jspb.Message.setOneofField(this, 1, proto.github.com.pyrus.platform.protos.NullableRobotControllerData.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.clearNull = function() {
  jspb.Message.setOneofField(this, 1, proto.github.com.pyrus.platform.protos.NullableRobotControllerData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.hasNull = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RobotControllerData data = 2;
 * @return {?proto.github.com.pyrus.platform.protos.RobotControllerData}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.getData = function() {
  return /** @type{?proto.github.com.pyrus.platform.protos.RobotControllerData} */ (
    jspb.Message.getWrapperField(this, proto.github.com.pyrus.platform.protos.RobotControllerData, 2));
};


/** @param {?proto.github.com.pyrus.platform.protos.RobotControllerData|undefined} value */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.github.com.pyrus.platform.protos.NullableRobotControllerData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.NullableRobotControllerData.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.ElectricalSignalData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.ElectricalSignalData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.toObject = function(includeInstance, msg) {
  var obj = {
    signalid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.ElectricalSignalData}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.ElectricalSignalData;
  return proto.github.com.pyrus.platform.protos.ElectricalSignalData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.ElectricalSignalData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.ElectricalSignalData}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSignalid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setValue(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.ElectricalSignalData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.ElectricalSignalData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignalid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 signalId = 1;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.getSignalid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.setSignalid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float value = 2;
 * @return {number}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.setValue = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp created = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.ElectricalSignalData.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.pyrus.platform.protos.Frame.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.pyrus.platform.protos.Frame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.pyrus.platform.protos.Frame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Frame.toObject = function(includeInstance, msg) {
  var obj = {
    catheterdataList: jspb.Message.toObjectList(msg.getCatheterdataList(),
    proto.github.com.pyrus.platform.protos.CatheterData.toObject, includeInstance),
    nullablerobotcontrollerdata: (f = msg.getNullablerobotcontrollerdata()) && proto.github.com.pyrus.platform.protos.NullableRobotControllerData.toObject(includeInstance, f),
    electricalsignalsList: jspb.Message.toObjectList(msg.getElectricalsignalsList(),
    proto.github.com.pyrus.platform.protos.ElectricalSignalData.toObject, includeInstance),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.pyrus.platform.protos.Frame}
 */
proto.github.com.pyrus.platform.protos.Frame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.pyrus.platform.protos.Frame;
  return proto.github.com.pyrus.platform.protos.Frame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.pyrus.platform.protos.Frame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.pyrus.platform.protos.Frame}
 */
proto.github.com.pyrus.platform.protos.Frame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.github.com.pyrus.platform.protos.CatheterData;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.CatheterData.deserializeBinaryFromReader);
      msg.addCatheterdata(value);
      break;
    case 2:
      var value = new proto.github.com.pyrus.platform.protos.NullableRobotControllerData;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.NullableRobotControllerData.deserializeBinaryFromReader);
      msg.setNullablerobotcontrollerdata(value);
      break;
    case 3:
      var value = new proto.github.com.pyrus.platform.protos.ElectricalSignalData;
      reader.readMessage(value,proto.github.com.pyrus.platform.protos.ElectricalSignalData.deserializeBinaryFromReader);
      msg.addElectricalsignals(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.pyrus.platform.protos.Frame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.pyrus.platform.protos.Frame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.pyrus.platform.protos.Frame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCatheterdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.github.com.pyrus.platform.protos.CatheterData.serializeBinaryToWriter
    );
  }
  f = message.getNullablerobotcontrollerdata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.pyrus.platform.protos.NullableRobotControllerData.serializeBinaryToWriter
    );
  }
  f = message.getElectricalsignalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.github.com.pyrus.platform.protos.ElectricalSignalData.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CatheterData catheterData = 1;
 * @return {!Array<!proto.github.com.pyrus.platform.protos.CatheterData>}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.getCatheterdataList = function() {
  return /** @type{!Array<!proto.github.com.pyrus.platform.protos.CatheterData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.pyrus.platform.protos.CatheterData, 1));
};


/** @param {!Array<!proto.github.com.pyrus.platform.protos.CatheterData>} value */
proto.github.com.pyrus.platform.protos.Frame.prototype.setCatheterdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.github.com.pyrus.platform.protos.CatheterData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.pyrus.platform.protos.CatheterData}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.addCatheterdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.github.com.pyrus.platform.protos.CatheterData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.clearCatheterdataList = function() {
  this.setCatheterdataList([]);
};


/**
 * optional NullableRobotControllerData nullableRobotControllerData = 2;
 * @return {?proto.github.com.pyrus.platform.protos.NullableRobotControllerData}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.getNullablerobotcontrollerdata = function() {
  return /** @type{?proto.github.com.pyrus.platform.protos.NullableRobotControllerData} */ (
    jspb.Message.getWrapperField(this, proto.github.com.pyrus.platform.protos.NullableRobotControllerData, 2));
};


/** @param {?proto.github.com.pyrus.platform.protos.NullableRobotControllerData|undefined} value */
proto.github.com.pyrus.platform.protos.Frame.prototype.setNullablerobotcontrollerdata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.clearNullablerobotcontrollerdata = function() {
  this.setNullablerobotcontrollerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.hasNullablerobotcontrollerdata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ElectricalSignalData electricalSignals = 3;
 * @return {!Array<!proto.github.com.pyrus.platform.protos.ElectricalSignalData>}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.getElectricalsignalsList = function() {
  return /** @type{!Array<!proto.github.com.pyrus.platform.protos.ElectricalSignalData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.pyrus.platform.protos.ElectricalSignalData, 3));
};


/** @param {!Array<!proto.github.com.pyrus.platform.protos.ElectricalSignalData>} value */
proto.github.com.pyrus.platform.protos.Frame.prototype.setElectricalsignalsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.github.com.pyrus.platform.protos.ElectricalSignalData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.pyrus.platform.protos.ElectricalSignalData}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.addElectricalsignals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.github.com.pyrus.platform.protos.ElectricalSignalData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.clearElectricalsignalsList = function() {
  this.setElectricalsignalsList([]);
};


/**
 * optional google.protobuf.Timestamp created = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.github.com.pyrus.platform.protos.Frame.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.pyrus.platform.protos.Frame.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.github.com.pyrus.platform.protos.DeviceType = {
  ROBOT: 0,
  CONTROLLER: 1,
  CATHETER: 2,
  HEADSET: 3,
  ELECTRICALSIGNALGENERATOR: 4
};

/**
 * @enum {number}
 */
proto.github.com.pyrus.platform.protos.DataType = {
  ROBOTSTATE: 0,
  ROBOTCONTROLS: 1,
  CATHETERSENSORCOORDINATES: 2,
  ELECTRICALSIGNALS: 3
};

goog.object.extend(exports, proto.github.com.pyrus.platform.protos);
